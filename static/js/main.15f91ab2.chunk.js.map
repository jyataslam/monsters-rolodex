{"version":3,"sources":["components/card/card.js","components/card-list/card-list.js","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","id","name","email","className","src","alt","CardList","monsters","map","index","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","e","setState","target","value","this","fetchMonsters","fetch","then","response","json","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAkBeA,G,MAdF,SAAC,GAAsC,IAAD,IAAnCC,QAAWC,EAAwB,EAAxBA,GAAIC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACnC,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BJ,EAA1B,0BACHK,IAAI,UACJF,UAAU,kBAEZ,6BAAKF,IACL,4BAAIC,SCCKI,G,MAVE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,qBAAKJ,UAAU,YAAf,SACGI,EAASC,KAAI,SAACT,EAASU,GAAV,OACZ,cAAC,EAAD,CAAuBV,QAASA,GAArBA,EAAQC,WCKZU,G,MATG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACd,uBACMC,KAAK,SACLF,YAAaA,EACbG,SAAUF,EACVT,UAAU,aC0CLY,G,kNA3CbC,MAAQ,CACNT,SAAU,GACVU,YAAa,I,EAiBfL,aAAe,SAACM,GACd,EAAKC,SAAS,CACZF,YAAaC,EAAEE,OAAOC,S,kEAfxBC,KAAKC,kB,sCAGU,IAAD,OACdC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAAClB,GAAD,OACJ,EAAKY,SAAS,CACZZ,SAAUA,S,+BAWR,IAAD,EAC2Be,KAAKN,MAA/BT,EADD,EACCA,SAAUU,EADX,EACWA,YACZW,EAAmBrB,EAASsB,QAAO,SAAC9B,GAAD,OACvCA,EAAQE,KAAK6B,cAAcC,SAASd,EAAYa,kBAElD,OACE,sBAAK3B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEQ,YAAY,kBACZC,aAAcU,KAAKV,eAErB,cAAC,EAAD,CAAUL,SAAUqB,W,GAtCVI,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.15f91ab2.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./card.styles.css\";\n\nconst Card = ({ monster: { id, name, email } }) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        src={`https://robohash.org/${id}?set=set2&size=180x180`}\n        alt=\"monster\"\n        className=\"monster-image\"\n      />\n      <h2>{name}</h2>\n      <p>{email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../card/card\";\nimport \"./card-list.styles.css\";\n\nconst CardList = ({ monsters }) => {\n  return (\n    <div className=\"card-list\">\n      {monsters.map((monster, index) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","\nimport React from 'react'\nimport './search-box.styles.css'\n\nconst SearchBox = ({ placeholder, handleChange }) => (\n    <input\n          type=\"search\"\n          placeholder={placeholder}\n          onChange={handleChange}\n          className=\"search\"\n        />\n);\n\nexport default SearchBox","/* eslint-disable no-unused-vars */\nimport React, { Component } from \"react\";\nimport CardList from \"./components/card-list/card-list.js\";\nimport SearchBox from \"./components/search-box/search-box.component.jsx\";\nimport \"./App.css\";\n// import { render } from \"@testing-library/react\";\n\nclass App extends Component {\n  state = {\n    monsters: [],\n    searchField: \"\",\n  };\n\n  componentDidMount() {\n    this.fetchMonsters();\n  }\n\n  fetchMonsters() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((monsters) =>\n        this.setState({\n          monsters: monsters,\n        })\n      );\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      searchField: e.target.value,\n    });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder=\"Search Monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}